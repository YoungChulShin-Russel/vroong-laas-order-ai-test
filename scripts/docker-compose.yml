name: order-local

services:
  mysql:
    container_name: order-mysql
    image: mysql/mysql-server:8.0.27
    restart: unless-stopped
    ports:
      - '3306:3306'
#    volumes:
#      - mysql_data:/var/lib/mysql
    command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
    environment:
      MYSQL_DATABASE: 'order'
      MYSQL_USER: 'order_user'
      MYSQL_PASSWORD: 'order_password'
      MYSQL_ROOT_PASSWORD: 'root_password'
      MYSQL_ROOT_HOST: '%'
      TZ: 'Asia/Seoul'
    platform: linux/arm64
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    container_name: order-zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    platform: linux/arm64

  kafka:
    container_name: order-kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - ./kafka-init.sh:/usr/local/bin/kafka-init.sh:ro
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    command: >
      bash -c "
      /etc/confluent/docker/run &
      chmod +x /usr/local/bin/kafka-init.sh &&
      /usr/local/bin/kafka-init.sh &&
      wait
      "
    platform: linux/arm64

#  redis-cluster:
#    container_name: order-redis-cluster
#    image: bitnami/redis-cluster:7.2.4
#    environment:
#      - 'ALLOW_EMPTY_PASSWORD=yes'
#      - 'REDIS_CLUSTER_REPLICAS=0'
#      - 'REDIS_NODES=127.0.0.1 127.0.0.1 127.0.0.1'
#      - 'REDIS_CLUSTER_CREATOR=yes'
#      - 'REDIS_CLUSTER_DYNAMIC_IPS=no'
#      - 'REDIS_CLUSTER_ANNOUNCE_IP=127.0.0.1'
#      - 'REDIS_CLUSTER_ANNOUNCE_PORT=7001'
#    ports:
#      - '7001:6379'
#
#  localstack:
#    image: localstack/localstack:3.6
#    environment:
#      - SERVICES=s3,sqs
#      - DOCKER_HOST=unix:///var/run/docker.sock
#      - LOCALSTACK_HOST=localhost
#    container_name: order-localstack
#    ports:
#      - "4566:4566"
#    volumes:
#      - "${PWD}/localstack:/etc/localstack/init/ready.d"
#      - "/var/run/docker.sock:/var/run/docker.sock"

#volumes:
#  mysql_data:
