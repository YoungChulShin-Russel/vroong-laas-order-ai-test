# ============================================
# Production 환경 설정 (운영용 - AWS Aurora MySQL)
# ============================================

# Spring Boot 설정
spring:
  # JPA/Hibernate 설정
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate  # 운영: 스키마 검증만 (변경 금지)
    properties:
      hibernate:
        format_sql: false  # 운영: SQL 포맷팅 비활성화
    show-sql: false      # 운영: SQL 로그 비활성화
  
  # Production DataSource (AWS Advanced JDBC Driver)
  datasource:
    # AWS Advanced JDBC Driver 사용
    # - Cluster Endpoint 하나로 자동 Read/Write Splitting
    # - Failover 1-2초 자동 처리
    driver-class-name: software.amazon.jdbc.Driver

    # URL 형식: jdbc:mysql:aws://cluster-endpoint:port/database?wrapperPlugins=...
    # wrapperPlugins:
    #   - readWriteSplitting: @Transactional(readOnly=true) → Reader, @Transactional → Writer
    #   - failover: DNS 대기 없이 1-2초 내 자동 Failover
    # clusterInstanceHostPattern: Aurora Cluster의 Instance 패턴 (Failover에 필요)
    url: jdbc:mysql:aws://${DB_CLUSTER_ENDPOINT:your-cluster.cluster-xxxxx.ap-northeast-2.rds.amazonaws.com}:3306/order?wrapperPlugins=readWriteSplitting,failover&clusterInstanceHostPattern=?.cluster-xxxxx.ap-northeast-2.rds.amazonaws.com&useSSL=true&requireSSL=true&serverTimezone=Asia/Seoul

    # 일반 인증 (username + password)
    username: ${DB_USERNAME:order_user}
    password: ${DB_PASSWORD}
    
    # HikariCP 설정 (필수!)
    # - AWS Driver는 Connection Pooling 필수 (성능 50배 차이)
    hikari:
      pool-name: OrderHikariPool
      # 읽기 트래픽이 90%이므로 Pool 크게 설정
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 3000
      idle-timeout: 600000
      max-lifetime: 1800000  # 30분 (Connection 재활용 주기)
      # Connection 유효성 검증 (Failover 감지)
      connection-test-query: SELECT 1
      validation-timeout: 3000

# Actuator 설정 (Production 환경 - 보안)
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus  # 운영: 필요한 엔드포인트만 노출
  
  endpoint:
    health:
      show-details: never  # 운영: 상세 정보 노출 안 함 (보안)
  
  # Prometheus Metrics 설정
  prometheus:
    metrics:
      export:
        step: 1m
        enabled: true

# 로그 설정
logging:
  level:
    vroong.laas.order: INFO  # 운영: 기본 로그만
    org.hibernate.SQL: WARN
    software.amazon.jdbc: INFO  # AWS Advanced JDBC Driver 로그
    # Failover, IAM 인증, Read/Write Splitting 로그 확인 가능
