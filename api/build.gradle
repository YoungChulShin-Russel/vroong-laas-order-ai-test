plugins {
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
}

apply plugin: "org.springframework.boot"

springBoot {
    mainClass = 'vroong.laas.order.api.ApiApplication'
}

dependencies {
    implementation project(":core")
    runtimeOnly project(":infrastructure")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    
    // Actuator (Health Check, Metrics, Kubernetes Probe)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Prometheus (Metrics for Production)
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    
    // Micrometer Tracing (Zipkin 제외)
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    
    // Logstash Encoder (ELK 스택)
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    
    // REST Docs - 테스트 기반 API 문서화
    // https://docs.spring.io/spring-restdocs/docs/current/reference/htmlsingle/
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    
    // Jackson - 테스트에서 ObjectMapper 설정 시 사용 (RestDocsConfiguration)
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // H2 Database - 테스트용 인메모리 DB
    testRuntimeOnly 'com.h2database:h2'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
    
    baseDirFollowsSourceFile()
    
    attributes 'snippets': snippetsDir
}

bootJar {
    dependsOn asciidoctor
    
    // HTML 문서 포함
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
    
    // .adoc 소스 파일도 포함 (선택적)
    from('src/docs/asciidoc') {
        into 'static/docs/sources'
        include '**/*.adoc'
    }
}
